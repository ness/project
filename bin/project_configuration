#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import yaml
import argparse

def find_config_file(storage):
    config_dir = os.environ.get('PROJECT_DIR')
    if config_dir:
        return os.path.join(config_dir, storage + '.yaml')
    else:
        raise Exception
        #return os.path.expanduser(os.path.join('~', '.' + MAIN_CONFIG_FILE))

def format_config(config, format_type):
    if format_type == 'shell':
        return ' '.join('{}'.format(item) for item in config)
    return config

def dotted_path(config, key):
    parts = key.split('.')
    value = config
    for part in parts:
        if isinstance(value, list):
            part = int(part)
        value = value[part]
    return value

def set_value(config, key, new_value):
    parts = key.split('.')
    value = config
    for i, part in enumerate(parts[:-1]):
        if isinstance(value, list):
            part = int(part)
        old_value = value.get(part)
        if old_value is None:
            value[part] = {}
        value = value.get(part)
    if isinstance(value, list):
        parts[-1] = int(parts[-1])
    value[parts[-1]] = new_value
    return config

def put_config(config, storage):
    file_path = find_config_file(storage)
    with open(file_path, 'w') as fd:
        yaml.dump(config, fd)

def get_config(storage):
    config_file = find_config_file(storage)
    config = yaml.load(open(config_file))
    return config

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--key', required=True)
    parser.add_argument('--value')
    parser.add_argument('--values', action='append')
    parser.add_argument('--format', default='yaml')
    parser.add_argument('--storage', default='main')

    config = parser.parse_args(sys.argv[1:])
    try:
        if config.value:
            conf = get_config(config.storage)
            conf = set_value(conf, config.key, config.value)
            put_config(conf, config.storage)
        elif config.values:
            conf = get_config(config.storage)
            conf = set_value(conf, config.key, config.value)
            put_config(conf, config.storage)
        else:
            conf = get_config(config.storage)
            print(format_config(dotted_path(conf, config.key), config.format))
    except :
        raise
        sys.exit(1)

if __name__ == "__main__":
    main()
